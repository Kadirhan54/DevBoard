version: "3.9"

services:
  db:
    image: postgres:16   # ✅ use postgres:16 or 17 (18 doesn’t exist yet)
    container_name: devboard-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: kado
      POSTGRES_DB: devboarddb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - devboard-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: devboard-rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - devboard-network

  api:
    build:
      context: .
      dockerfile: src/DevBoard.Api/Dockerfile
    container_name: devboard-api
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ConnectionStrings__DevBoardDatabase: "Host=db;Port=5432;Database=devboarddb;Username=postgres;Password=kado"
      RabbitMQ__Host: "rabbitmq"
      RabbitMQ__Username: "guest"
      RabbitMQ__Password: "guest"
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_started   # ✅ proper syntax
    networks:
      - devboard-network

networks:
  devboard-network:

volumes:
  pgdata:
